import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
    repositories {
        google()
        mavenCentral()
        maven{url 'https://jitpack.io'}
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        maven{url 'https://jitpack.io'}
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
        maven {
            // Important note:
            // To authenticate with GitHub Packages, you need to generate a fine-grained personal access token
            // The token needs access only to [Public repositories]
            // Add it as gpr.token=$token in local.properties file in the root of the project
            // For more details, refer to the documentation:
            // https://github.com/settings/personal-access-tokens/new
            // https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-gradle-registry#authenticating-with-a-personal-access-token

            def localProps = getLocalProps()
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/ARK-Builders/ark-android"
            credentials {
                username = "token"
                password = localProps.getProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    versionCatalogs {
        create("libraries") {
            from(files("./gradle/libs.versions.toml"))
        }
    }
}

rootProject.name = "ARK Memo"
include ':app'

def getLocalProps() {
    def props = new Properties()
    def localPropsFile = new File(rootDir, "local.properties")

    if (localPropsFile.exists()) {
        localPropsFile.withInputStream { stream ->
            props.load(stream)
        }
    }

    return props
}
