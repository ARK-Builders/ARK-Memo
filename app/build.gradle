plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id 'kotlin-kapt'
    alias(libs.plugins.hilt.android)
    id 'kotlin-parcelize'
    alias(libs.plugins.google.services)
    alias(libs.plugins.firebase.crashlytics)
    alias(libs.plugins.gradle.ktlint)
}

android {
    namespace 'dev.arkbuilders.arkmemo'
    compileSdk 34

    defaultConfig {
        applicationId "dev.arkbuilders.arkmemo"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        testRelease {
            storeFile project.rootProject.file('keystore.jks')
            storePassword "sw0rdf1sh"
            keyAlias "ark-builders-test"
            keyPassword "rybamech"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            debuggable true
            manifestPlaceholders = [
                    appIcon : "@mipmap/ic_launcher",
                    appLabel: "@string/app_name"
            ]
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.testRelease
            manifestPlaceholders = [
                    appIcon : "@mipmap/ic_launcher",
                    appLabel: "@string/app_name"
            ]
        }
    }

    flavorDimensions = ["publishTarget"]
    productFlavors {
        github {
            dimension "publishTarget"
            buildConfigField "boolean", "GOOGLE_PLAY_BUILD", "false"
        }

        googleplay {
            dimension "publishTarget"
            buildConfigField "boolean", "GOOGLE_PLAY_BUILD", "true"
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures{
        buildConfig true
        viewBinding true
    }
}


dependencies {

    implementation(libraries.androidx.core.ktx)
    implementation(libraries.androidx.appcompat)
    implementation(libraries.android.material)
    implementation(libraries.androidx.constraintlayout)
    implementation(libraries.androidx.navigation.fragment.ktx)
    implementation(libraries.androidx.preference.ktx)
    implementation(libraries.androidx.lifecycle.viewmodel.ktx)

    implementation(libraries.arkbuilders.arkfilepicker)
    implementation(libraries.arkbuilders.arklib)

    implementation(libraries.google.dagger.hilt.android)
    kapt(libraries.google.dagger.hilt.compiler)
    kapt(libraries.androidx.hilt.compiler)

    implementation(libraries.viewbinding.property.delegate.noreflection)

    testImplementation(libraries.junit)
    androidTestImplementation(libraries.androidx.test.junit)
    androidTestImplementation(libraries.androidx.test.espresso)

    implementation(libraries.airbnb.lottie)
    implementation(libraries.qr.generator)
    implementation(libraries.coil)
    implementation(libraries.skydoves.balloon)

    implementation(platform(libraries.google.firebase.bom))
    implementation(libraries.google.firebase.crashlytics)
    implementation(libraries.google.firebase.analytics)
}

tasks.preBuild.dependsOn ktlintCheck

tasks.preBuild.dependsOn ktlintFormat

tasks.ktlintCheck.shouldRunAfter ktlintFormat